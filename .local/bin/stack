#!/usr/bin/env python3

import os
from argparse import ArgumentParser

BASE_DIR = os.path.join(os.getenv('HOME'), '.stacks')
P_HELP = 'Pop N items (default 1)'
S_HELP = 'Show N items (default all)'

parser = ArgumentParser(description='Single-line-note-taking utility for the command line')
parser.add_argument('--base_dir', default=BASE_DIR, help='Location of stacks (default ~/.stacks)')
parser.add_argument('stack', nargs='?', default='default', help='Name of stack (default "default")')
group = parser.add_mutually_exclusive_group(required=True)
group.add_argument('--push', metavar='VAL', nargs='+', help='Push subsequent items one by one')
group.add_argument('--pop', metavar='N', type=int, const='1', nargs='?', help=P_HELP)
group.add_argument('--show', metavar='N', type=int, default='0', const=None, nargs='?', help=S_HELP)
group.add_argument('--create', action='store_true', help='Create a new stack')
group.add_argument('--delete', action='store_true', help='Delete an existing stack')
group.add_argument('--list', action='store_true', help='List all stacks')
args = parser.parse_args()

if args.list:
    print(os.listdir(args.base_dir))
    exit(0)

spath = os.path.join(args.base_dir, args.stack)
if args.create:
    with open(spath, 'x'):
        pass
elif args.delete:
    os.remove(spath)
else:
    with open(spath, 'r') as stack:
        lines = stack.readlines()

    print(''.join(lines[:args.pop or args.show]), end='')
    if args.push:
        open(spath, 'w').writelines([a + '\n' for a in args.push[::-1]] + lines)
    elif args.pop:
        open(spath, 'w').writelines(lines[args.pop:])
